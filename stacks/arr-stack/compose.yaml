services:
  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.2
    container_name: jellyseerr
    environment:
    - LOG_LEVEL=debug
    - TZ=Europe/Moscow
    - PORT=5055 #optional
    ports:
    - 5055:5055
    volumes:
    - jellyseerr-config:/app/config
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3
    restart: unless-stopped
    dns: 
    - 9.9.9.9
    networks:
      - proxy
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.jellyseerr.entrypoints=websecure"
    - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.home.m1xxos.tech`) || Host(`jellyseerr.m1xxos.tech`)"
    - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    - "traefik.http.routers.jellyseerr.tls=true"

  radarr:
    image: lscr.io/linuxserver/radarr:5.26.2
    container_name: radarr
    environment:
    - PUID=568
    - PGID=568
    - TZ=Europe/Moscow
    expose:
    - 7878
    volumes:
    - radarr-config:/config
    - movies:/movies #optional
    - downloads:/downloads #optional
    restart: always
    networks:
      - proxy
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.radarr.entrypoints=websecure"
    - "traefik.http.routers.radarr.rule=Host(`radarr.home.m1xxos.tech`)"
    - "traefik.http.routers.radarr.service=radarr"
    - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    - "traefik.http.routers.radarr.tls=true"

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    environment:
    - PUID=568
    - PGID=568
    - TZ=Europe/Moscow
    expose:
    - 8989
    volumes:
    - sonarr-config:/config
    - tvseries:/tv #optional
    - downloads:/downloads #optional
    restart: always
    networks:
      - proxy
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.sonarr.entrypoints=websecure"
    - "traefik.http.routers.sonarr.service=sonarr"
    - "traefik.http.routers.sonarr.rule=Host(`sonarr.home.m1xxos.tech`)"
    - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    - "traefik.http.routers.sonarr.tls=true"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.37.0
    container_name: prowlarr
    environment:
    - PUID=568
    - PGID=568
    - TZ=Europe/Moscow
    expose:
    - 9696
    volumes:
    - prowlarr-config:/config
    restart: unless-stopped
    networks:
      - proxy
      - arr
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.prowlarr.entrypoints=websecure"
    - "traefik.http.routers.prowlarr.service=prowlarr"
    - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.home.m1xxos.tech`)"
    - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    - "traefik.http.routers.prowlarr.tls=true"
    - "traefik.docker.network=traefik_proxy"
  
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.25
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Moscow
    expose:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
    networks:
      - arr

volumes:
  jellyseerr-config:
  radarr-config:
  sonarr-config:
  prowlarr-config:
  tvseries:
    external:
      name: tvseries
  movies:
    external:
      name: movies
  downloads:
    external:
      name: downloads
 
networks:
  proxy:
    external:
      name: traefik_proxy
  arr:
